{"version":3,"sources":["components/expenses/ExpenseForm.module.css","components/expenses/ErrorModal.module.css","components/expenses/ExpenseDate.module.css","components/expenses/Expense.module.css","components/expenses/ExpenseFilter.module.css","components/UI/Modal.module.css","App.module.css","components/UI/Card.module.css","components/expenses/ExpenseList.module.css","components/expenses/ExpenseDate.js","components/UI/Card.js","components/expenses/Expense.js","components/expenses/ExpenseList.js","hooks/use-input.js","components/expenses/ExpenseForm.js","components/expenses/SearchIcon.js","components/expenses/ExpenseFilter.js","components/UI/Modal.js","components/expenses/ErrorModal.js","App.js","index.js"],"names":["module","exports","ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","classes","Card","card","children","Expense","price","toFixed","expense","info","title","ExpenseList","expenses","map","id","useInput","validate","useState","enteredValue","setEnteredValue","isTouched","setIsTouched","valueIsValid","value","hasError","valueChangeHandler","event","target","inputBlurHandler","reset","ExpenseForm","formIsShown","setFormIsShown","trim","enteredTitle","titleHasError","titleHandler","titleBlurHandler","titleIsValid","resetTitle","enteredPrice","priceHasError","priceHandler","priceBlurHandler","priceIsValid","resetPrice","enteredDate","dateHasError","dateHandler","dateBlurHandler","dateIsValid","resetDate","formIsValid","form","onSubmit","preventDefault","expenseData","Math","random","toString","Date","replace","onNewExpense","action","fields","type","onChange","onBlur","invalid","min","step","buttons","onClick","disabled","submit","SearchIcon","width","height","fill","xmlns","d","ExpenseFilter","enteredYear","setEnteredYear","filter","actions","placeholder","max","Backdrop","backdrop","ModalOverlay","modal","content","portalElement","document","getElementById","Modal","ReactDOM","createPortal","onClose","ErrorModal","error","header","message","button","App","setExpenses","filteredYear","setFilteredYear","filterIsValid","setFilterIsValid","filteredExpenses","prevExpenses","sort","a","b","container","selected","selectedYear","length","render","StrictMode"],"mappings":"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","file":"static/js/main.600cbfd5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-wrapper\":\"ExpenseForm_form-wrapper__2exQ_\",\"form\":\"ExpenseForm_form__2qd3z\",\"action\":\"ExpenseForm_action__1HO_g\",\"buttons\":\"ExpenseForm_buttons__1wZkY\",\"invalid\":\"ExpenseForm_invalid__16O2G\",\"submit\":\"ExpenseForm_submit__2y7uw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"ErrorModal_header__3-I1T\",\"message\":\"ErrorModal_message__2E36n\",\"actions\":\"ErrorModal_actions__6MDpC\",\"button\":\"ErrorModal_button__1yDV0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"date\":\"ExpenseDate_date__g-ULR\",\"month\":\"ExpenseDate_month__3HqlF\",\"year\":\"ExpenseDate_year___nHB-\",\"day\":\"ExpenseDate_day__1nVDE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"expense\":\"Expense_expense__1-T7S\",\"info\":\"Expense_info__1WcLS\",\"price\":\"Expense_price__3kRRY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"ExpenseFilter_filter__3U-q2\",\"actions\":\"ExpenseFilter_actions__uqQH1\",\"filter-control\":\"ExpenseFilter_filter-control__A1fEQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__1mfF6\",\"modal\":\"Modal_modal__4DXUe\",\"slide-down\":\"Modal_slide-down__W3MdX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"message\":\"App_message__2vrzR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"expenses\":\"ExpenseList_expenses__1SHVx\"};","import classes from \"./ExpenseDate.module.css\";\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className={classes.date}>\n      <div className={classes.month}>{month}</div>\n      <div className={classes.year}>{year}</div>\n      <div className={classes.day}>{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import classes from \"./Card.module.css\";\n\nconst Card = (props) => {\n  return (\n    <div className={`${classes.card} ${props.className}`}>{props.children}</div>\n  );\n};\n\nexport default Card;\n","import classes from \"./Expense.module.css\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\n\nconst Expense = (props) => {\n  const price = `$${props.price.toFixed(2)}`;\n\n  return (\n    <li>\n      <Card className={classes.expense}>\n        <ExpenseDate date={props.date} />\n        <div className={classes.info}>\n          <h2>{props.title}</h2>\n          <div className={classes.price}>{price}</div>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default Expense;\n","import Expense from \"./Expense\";\nimport classes from \"./ExpenseList.module.css\";\n\nconst ExpenseList = (props) => {\n  return (\n    <ul className={classes.expenses}>\n      {props.expenses.map((expense) => (\n        <Expense\n          key={expense.id}\n          id={expense.id}\n          title={expense.title}\n          price={expense.price}\n          date={expense.date}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpenseList;\n","import { useState } from \"react\";\n\nconst useInput = (validate) => {\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isTouched, setIsTouched] = useState(false);\n\n  const valueIsValid = validate(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n\n  const valueChangeHandler = (event) => {\n    setEnteredValue(event.target.value);\n  };\n\n  const inputBlurHandler = () => {\n    setIsTouched(true);\n  };\n\n  const reset = () => {\n    setEnteredValue(\"\");\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    valueIsValid,\n    reset,\n  };\n};\n\nexport default useInput;\n","import classes from \"./ExpenseForm.module.css\";\nimport Card from \"../UI/Card\";\nimport { useState, Fragment } from \"react\";\nimport useInput from \"../../hooks/use-input\";\n\nconst ExpenseForm = (props) => {\n  const [formIsShown, setFormIsShown] = useState(false);\n\n  const {\n    value: enteredTitle,\n    hasError: titleHasError,\n    valueChangeHandler: titleHandler,\n    inputBlurHandler: titleBlurHandler,\n    valueIsValid: titleIsValid,\n    reset: resetTitle,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const {\n    value: enteredPrice,\n    hasError: priceHasError,\n    valueChangeHandler: priceHandler,\n    inputBlurHandler: priceBlurHandler,\n    valueIsValid: priceIsValid,\n    reset: resetPrice,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const {\n    value: enteredDate,\n    hasError: dateHasError,\n    valueChangeHandler: dateHandler,\n    inputBlurHandler: dateBlurHandler,\n    valueIsValid: dateIsValid,\n    reset: resetDate,\n  } = useInput((value) => value.trim() !== \"\");\n\n  let formIsValid = false;\n\n  if (titleIsValid && priceIsValid && dateIsValid) {\n    formIsValid = true;\n  }\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      id: Math.random().toString(),\n      title: enteredTitle,\n      price: +enteredPrice,\n      date: new Date(enteredDate.replace(/-/g, \"/\")),\n    };\n\n    props.onNewExpense(expenseData);\n\n    resetTitle();\n    resetPrice();\n    resetDate();\n  };\n\n  const showFormHandler = () => {\n    setFormIsShown(true);\n  };\n\n  const hideFormHandler = () => {\n    setFormIsShown(false);\n  };\n\n  return (\n    <Fragment>\n      <Card className={classes[\"form-wrapper\"]}>\n        {formIsShown && (\n          <form className={classes.form} onSubmit={submitHandler}>\n            <div className={classes.action}>\n              <div className={classes.fields}>\n                <label>Title</label>\n                <input\n                  type=\"text\"\n                  value={enteredTitle}\n                  onChange={titleHandler}\n                  onBlur={titleBlurHandler}\n                ></input>\n                {titleHasError && (\n                  <p className={classes.invalid}>Title must not be empty.</p>\n                )}\n              </div>\n              <div className={classes.fields}>\n                <label>Price</label>\n                <input\n                  onChange={priceHandler}\n                  onBlur={priceBlurHandler}\n                  value={enteredPrice}\n                  type=\"number\"\n                  min=\"0\"\n                  step=\"0.01\"\n                ></input>\n                {priceHasError && (\n                  <p className={classes.invalid}>Price must not be empty.</p>\n                )}\n              </div>\n              <div className={classes.fields}>\n                <label>Date</label>\n                <input\n                  onChange={dateHandler}\n                  onBlur={dateBlurHandler}\n                  value={enteredDate}\n                  type=\"date\"\n                ></input>\n                {dateHasError && (\n                  <p className={classes.invalid}>Date must not be empty.</p>\n                )}\n              </div>\n            </div>\n            <div className={classes.buttons}>\n              <button onClick={hideFormHandler}>Cancel</button>\n              <button disabled={!formIsValid} className={classes.submit}>\n                Add Expense\n              </button>\n            </div>\n          </form>\n        )}\n        {!formIsShown && (\n          <button onClick={showFormHandler}>Add New Expense</button>\n        )}\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default ExpenseForm;\n","const SearchIcon = () => {\n  return (\n    <svg\n      width=\"24\"\n      height=\"24\"\n      fill=\"white\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill-rule=\"evenodd\"\n      clip-rule=\"evenodd\"\n    >\n      <path d=\"M15.853 16.56c-1.683 1.517-3.911 2.44-6.353 2.44-5.243 0-9.5-4.257-9.5-9.5s4.257-9.5 9.5-9.5 9.5 4.257 9.5 9.5c0 2.442-.923 4.67-2.44 6.353l7.44 7.44-.707.707-7.44-7.44zm-6.353-15.56c4.691 0 8.5 3.809 8.5 8.5s-3.809 8.5-8.5 8.5-8.5-3.809-8.5-8.5 3.809-8.5 8.5-8.5z\" />\n    </svg>\n  );\n};\n\nexport default SearchIcon;\n","import { useState } from \"react\";\nimport classes from \"./ExpenseFilter.module.css\";\nimport SearchIcon from \"./SearchIcon\";\n\nconst ExpenseFilter = (props) => {\n  const [enteredYear, setEnteredYear] = useState(\"\");\n\n  const dropdownChangeHandler = () => {\n    props.onChange(enteredYear);\n  };\n\n  const yearHandler = (event) => {\n    setEnteredYear(event.target.value);\n  };\n\n  return (\n    <div className={classes.filter}>\n      <div className={classes[\"filter-control\"]}>\n        <label>Filter by Year</label>\n        <div className={classes.actions}>\n          <input\n            type=\"number\"\n            value={enteredYear}\n            onChange={yearHandler}\n            placeholder=\"Year\"\n            min=\"2000\"\n            max=\"2022\"\n          ></input>\n          <button onClick={dropdownChangeHandler}>\n            <SearchIcon />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpenseFilter;\n","import classes from \"./Modal.module.css\";\nimport ReactDOM from \"react-dom\";\nimport { Fragment } from \"react\";\n\nconst Backdrop = (props) => {\n  return <div className={classes.backdrop} onClick={props.onClick} />;\n};\n\nconst ModalOverlay = (props) => {\n  return (\n    <div className={`${classes.modal} ${props.className}`}>\n      <div className={classes.content}>{props.children}</div>\n    </div>\n  );\n};\n\nconst portalElement = document.getElementById(\"overlays\");\n\nconst Modal = (props) => {\n  return (\n    <Fragment>\n      {ReactDOM.createPortal(\n        <Backdrop onClick={props.onClose} />,\n        portalElement\n      )}\n      {ReactDOM.createPortal(\n        <ModalOverlay>{props.children}</ModalOverlay>,\n        portalElement\n      )}\n    </Fragment>\n  );\n};\n\nexport default Modal;\n","import classes from \"./ErrorModal.module.css\";\nimport Modal from \"../UI/Modal\";\n\nconst ErrorModal = (props) => {\n  return (\n    <Modal className={classes.error} onClose={props.onClick}>\n      <header className={classes.header}>\n        <h2>{props.title}</h2>\n      </header>\n      <div className={classes.message}>\n        <p>{props.message}</p>\n      </div>\n      <footer className={classes.actions}>\n        <button onClick={props.onClick} className={classes.button}>\n          Okay\n        </button>\n      </footer>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import ExpenseList from \"./components/expenses/ExpenseList\";\nimport Card from \"./components/UI/Card\";\nimport classes from \"./App.module.css\";\nimport ExpenseForm from \"./components/expenses/ExpenseForm\";\nimport ExpenseFilter from \"./components/expenses/ExpenseFilter\";\nimport ErrorModal from \"./components/expenses/ErrorModal\";\nimport { Fragment, useState } from \"react\";\n\nfunction App() {\n  const [expenses, setExpenses] = useState([]);\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\n  const [filterIsValid, setFilterIsValid] = useState(true);\n\n  const filterChangeHandler = (selectedYear) => {\n    if (selectedYear < 2000 || selectedYear > 2022) {\n      setFilterIsValid(false);\n      return;\n    }\n    setFilteredYear(selectedYear);\n  };\n\n  const onClose = () => {\n    setFilterIsValid(true);\n  };\n\n  const filteredExpenses = expenses.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  const newExpenseHandler = (expenseData) => {\n    setExpenses((prevExpenses) => {\n      return [expenseData, ...prevExpenses].sort((a, b) => b.date - a.date);\n    });\n  };\n\n  return (\n    <Fragment>\n      {!filterIsValid && (\n        <ErrorModal\n          onClick={onClose}\n          title=\"Invalid Input\"\n          message=\"Insert a year between 2000 and 2022!\"\n        />\n      )}\n      <ExpenseForm onNewExpense={newExpenseHandler} />\n      <Card className={classes.container}>\n        <ExpenseFilter selected={filteredYear} onChange={filterChangeHandler} />\n        {filteredExpenses.length === 0 && (\n          <p\n            className={classes.message}\n          >{`No expenses found in ${filteredYear}.`}</p>\n        )}\n        <ExpenseList expenses={filteredExpenses} />\n      </Card>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}